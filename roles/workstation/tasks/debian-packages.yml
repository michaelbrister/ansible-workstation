---

- name: Update apt packages
  apt:
    update_cache: yes
    cache_valid_time: 86400 # One day
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Upgrade all packages to the latest version
  apt:
    name: "*"
    state: latest

- name: Install base packages
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - software-properties-common
    - git
    - curl
    - tree
    - neovim
    - net-tools
    - python3-neovim
    - python3-pip
    - openvpn-systemd-resolved
    - remmina
    - flameshot
    - htop
    - nload
    - virtualbox
    - direnv
    - build-essential
    - tmux
    - tmate
    - fonts-powerline
    - xclip
    - nmap
    - httping
    - unzip
    - cmake


################
# Install docker
################

- name: Add docker key
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present
  tags:
    - docker

- name: Add docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present
  tags:
    - docker

- name: Install docker
  apt:
    name: docker-ce
    state: present
  tags:
    - docker

- name: Install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 0755
  tags:
    - docker

- name: Fix user group
  user:
      name: "{{ lookup('env', 'USER') }}"
      group: "{{ lookup('env', 'USER') }}"  
  tags:
    - docker

- name: Add user to docker group
  user:
      name: "{{ lookup('env', 'USER') }}"
      groups: docker
      append: true
  tags:
    - docker

#################
# Install kubectl
#################

- name: Add kubectl key
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: present
  tags:
    - k8s

- name: Add kubectl repository
  apt_repository:
    repo: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  tags:
    - k8s

- name: Install kubectl
  apt:
    name: kubectl
    state: present
  tags:
    - k8s

##################
# Install minikube
##################

- name: Add kubectl repository
  apt_repository:
    repo: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  tags:
    - k8s

- name: Install minikube
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    mode: '755'
  tags:
    - k8s

- name: Set minikube permissions
  file:
      path: /usr/local/bin/minikube
      owner: "{{ lookup('env', 'USER') }}"
      group: docker
      mode: '0755'
  tags:
    - k8s
